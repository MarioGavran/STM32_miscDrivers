#include <stdint.h>

/*Command port pin definitions*/
//**************************************************************************************************//
extern void	Init_GPIO_SSD1289(void);
extern void Init_SSD1289(void);


extern void 	Lcd_Write_Index(uint16_t index);
extern void 	Lcd_Write_Data(uint16_t data);
extern void	Lcd_Write_Reg(uint16_t reg_addr, uint16_t reg_data);
extern uint16_t	Lcd_Read_Data(void);
extern uint16_t	Lcd_Read_Reg(uint16_t reg_addr);


extern void	 Set_Cursor(uint16_t x_kur, uint16_t y_kur);
extern void	 Lcd_Clear(uint16_t color);
extern void	 Draw_Point(uint16_t x,uint16_t y,uint16_t color,uint8_t size);


extern void 	Print_String(uint16_t x, uint16_t y, uint16_t color, uint16_t bcolor,  uint8_t *s, uint8_t size);
extern void 	Print_Char(uint16_t x, uint16_t y, uint16_t color, uint16_t bcolor, uint8_t character, uint8_t size);
extern void 	Draw_Image(const uint16_t *ptr_image);


extern void 	Draw_Line(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2, uint16_t color, uint8_t size);
extern void 	Set_Work_Area(uint16_t x1, uint16_t x2, uint16_t y1, uint16_t y2, uint16_t color);


extern void 	Delay_m(unsigned int ms);
extern void 	Delay_u(unsigned int us);



/*Command port pin definitions*/
//**************************************************************************************************//
#define lcd_rd 		5	// PA5 - Read
#define lcd_wr		6	// PA6 - Write
#define lcd_rs		7	// PA7 - Register select - DC in datasheet (command - 0, data - 1)
#define lcd_cs 		8	// PA8 - Chip select
#define lcd_rst		9	// PA9 - Reset



/*Colors*/
//**************************************************************************************************//
#define cyan		(0x07FFU)
#define magneta		(0xF81FU)
#define yellow		(0x07FFU)
#define white		(0xFFFFU)

#define black		(0x0000U)
#define	grey		(0xF7DEU)
#define	green		(0x07E0U)
#define	blue		(0xF100U)
#define	red		(0x008FU)




/*Register addresses*/
//**************************************************************************************************//
#define Oscillation_Start 			(0x00000000U)
#define Driver_output_control			(0x00000001U)
#define LCD_drive_AC_control			(0x00000002U)
#define Power_control_1				(0x00000003U)
#define Compare_register_1			(0x00000005U)
#define Compare_register_2			(0x00000006U)
#define Display_control				(0x00000007U)
#define Frame_cycle_control			(0x0000000BU)
#define Power_control_2				(0x0000000CU)
#define Power_control_3				(0x0000000DU)
#define Power_control_4				(0x0000000EU)
#define Gate_scan_start_position		(0x0000000FU)
#define Sleep_mode				(0x00000010U)
#define Entry_mode				(0x00000011U)
#define Optimize_Access_Speed_3			(0x00000012U)
#define Generic_Interface_Contrl		(0x00000015U)
#define Horizontal_Porch			(0x00000016U)
#define Vertical_Porch				(0x00000017U)
#define Power_control_5				(0x0000001EU)
#define RAM_data_write_read			(0x00000022U)
#define RAM_write_data_mask_1			(0x00000023U)
#define RAM_write_data_mask_2			(0x00000024U)
#define Frame_Frequency				(0x00000025U)
#define VCOM_OTP_1				(0x00000028U)
#define Optimize_Access_Speed_1			(0x00000028U)	//ista adresa ?
#define VCOM_OTP_2				(0x00000029U)
#define Optimize_Access_Speed_2			(0x0000002FU)
#define gama_control_1				(0x00000030U)
#define gama_control_2				(0x00000031U)
#define gama_control_3				(0x00000032U)
#define gama_control_4				(0x00000033U)
#define gama_control_5				(0x00000034U)
#define gama_control_6				(0x00000035U)
#define gama_control_7				(0x00000036U)
#define gama_control_8				(0x00000037U)
#define gama_control_9				(0x0000003AU)
#define gama_control_10				(0x0000003BU)
#define Vertical_scroll_control_1		(0x00000041U)
#define Vertical_scroll_control_2		(0x00000042U)
#define Horizontal_RAM_address_position		(0x00000044U)
#define Vertical_RAM_address_start_position	(0x00000045U)
#define Vertical_RAM_address_end_position	(0x00000046U)
#define First_window_start			(0x00000048U)
#define First_window_end			(0x00000049U)
#define Second_window_start			(0x0000004AU)
#define Second_window_end			(0x0000004BU)
#define Set_GDDRAM_X_address_counter		(0x0000004EU)
#define Set_GDDRAM_Y_address_counter		(0x0000004FU)



/*
*	ASCII Table
*	Only used for printable characters
*	Unprintable characters are replaced with 'spaces'
*/
//**************************************************************************************************//
static const uint8_t  ASCIItable[128][8] = 
{
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  0	NUL	null
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  1	SOH	start of heading
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  2	STX	start of text
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  3	ETX	end of transmission
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  4 	EOT	enquiry
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  5	ENQ	enquiry
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  6	ACK	acknowledge
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  7	BEL	bell
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  8	BS	backspace
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //  9	TAB	horizontal tab
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 10	LF	LINE FEED feed new line
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 11	VT	vertical tab
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 12	FF	FORM FEED feed new page
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 13	CR	carrige return
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 14	SO	shift out
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 15	SI	shift in
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 16	DLE	data link escape
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 17	DC1	devce controll
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 18	DC2	devce controll
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 19	DC3	devce controll
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 20	DC4	devce controll
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 21	NAK	not acknowledge
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 22	SYN	synchronous idle
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 23	ETB	end of trans} Block
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 24	CAN	cancle
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 25	EM	end of medium
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 26	SUB	substitude
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 27	ESC	escape
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 28	FS	file separator
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 29	GS	group separator
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 30	RS	record separator
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 31	US	unit separator


{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 // 32		space
{0x04,0x04,0x04,0x04,0x00,0x04,0x00,0x00},	 // 33	!	
{0x0A,0x0A,0x0A,0x00,0x00,0x00,0x00,0x00},	 // 34	"	
{0x0A,0x0A,0x1F,0x0A,0x1F,0x0A,0x0A,0x00},	 // 35	#	
{0x04,0x0F,0x14,0x0E,0x05,0x1E,0x04,0x00},	 // 36	$	
{0x18,0x19,0x02,0x04,0x08,0x13,0x03,0x00},	 // 37	%	
{0x0C,0x12,0x14,0x08,0x14,0x12,0x0D,0x00},	 // 38	&	
{0x0C,0x04,0x08,0x00,0x00,0x00,0x00,0x00},	 // 39		
{0x02,0x04,0x08,0x08,0x08,0x04,0x02,0x00},	 // 40	(	
{0x08,0x04,0x02,0x02,0x02,0x04,0x08,0x00},	 // 41	)	
{0x00,0x04,0x15,0x0E,0x15,0x04,0x00,0x00},	 // 42	*	
{0x00,0x04,0x04,0x1F,0x04,0x04,0x00,0x00},	 // 43	+	
{0x00,0x00,0x00,0x00,0x0C,0x04,0x08,0x00},	 // 44	,	
{0x00,0x00,0x00,0x1F,0x00,0x00,0x00,0x00},	 // 45	-	
{0x00,0x00,0x00,0x00,0x00,0x0C,0x0C,0x00},	 // 46	.	
{0x00,0x01,0x02,0x04,0x08,0x10,0x00,0x00},	 // 47	/	


{0x0E,0x11,0x13,0x15,0x19,0x11,0x0E,0x00},	 // 48	0	
{0x04,0x0C,0x04,0x04,0x04,0x04,0x0E,0x00},	 // 49	1	
{0x0E,0x11,0x01,0x02,0x04,0x08,0x1F,0x00},	 // 50	2	
{0x1F,0x02,0x04,0x02,0x01,0x11,0x0E,0x00},	 // 51	3	
{0x02,0x06,0x0A,0x12,0x1F,0x02,0x02,0x00},	 // 52	4	
{0x1F,0x10,0x1E,0x01,0x01,0x11,0x0E,0x00},	 // 53	5	
{0x06,0x08,0x10,0x1E,0x11,0x11,0x0E,0x00},	 // 54	6	
{0x1F,0x01,0x02,0x04,0x08,0x08,0x08,0x00},	 // 55	7	
{0x0E,0x11,0x11,0x0E,0x11,0x11,0x0E,0x00},	 // 56	8	
{0x0E,0x11,0x11,0x0F,0x01,0x02,0x0C,0x00},	 // 57	9	


{0x00,0x0C,0x0C,0x00,0x0C,0x0C,0x00,0x00},	 // 58	:	
{0x00,0x0C,0x0C,0x00,0x0C,0x04,0x08,0x00},	 // 59	;	
{0x02,0x04,0x08,0x10,0x08,0x04,0x02,0x00},	 // 60	<	
{0x00,0x00,0x1F,0x00,0x1F,0x00,0x00,0x00},	 // 61	=	
{0x08,0x04,0x02,0x01,0x02,0x04,0x08,0x00},	 // 62	>	
{0x0E,0x11,0x01,0x02,0x04,0x00,0x04,0x00},	 // 63	?	
{0x0E,0x11,0x01,0x0D,0x15,0x15,0x0E,0x00},	 // 64	@	


{0x0E,0x11,0x11,0x11,0x1F,0x11,0x11,0x00},	 // 65	A	
{0x1E,0x11,0x11,0x1E,0x11,0x11,0x1E,0x00},	 // 66	B	
{0x0E,0x11,0x10,0x10,0x10,0x11,0x0E,0x00},	 // 67	C	
{0x1C,0x12,0x11,0x11,0x11,0x12,0x1C,0x00},	 // 68	D	
{0x1F,0x10,0x10,0x1E,0x10,0x10,0x1F,0x00},	 // 69	E	
{0x1F,0x10,0x10,0x1E,0x10,0x10,0x10,0x00},	 // 70	F	
{0x0E,0x11,0x10,0x17,0x11,0x11,0x0E,0x00},	 // 71	G	
{0x11,0x11,0x11,0x1F,0x11,0x11,0x11,0x00},	 // 72	H	
{0x0E,0x04,0x04,0x04,0x04,0x04,0x0E,0x00},	 // 73	I	
{0x07,0x02,0x02,0x02,0x02,0x12,0x0C,0x00},	 // 74	J	
{0x11,0x12,0x14,0x18,0x14,0x12,0x11,0x00},	 // 75	K	
{0x10,0x10,0x10,0x10,0x10,0x10,0x1F,0x00},	 // 76	L	
{0x11,0x1B,0x15,0x15,0x11,0x11,0x11,0x00},	 // 77	M	
{0x11,0x11,0x19,0x15,0x13,0x11,0x11,0x00},	 // 78	N	
{0x0E,0x11,0x11,0x11,0x11,0x11,0x0E,0x00},	 // 79	O	
{0x1E,0x11,0x11,0x1E,0x10,0x10,0x10,0x00},	 // 80	P	
{0x0E,0x11,0x11,0x11,0x15,0x12,0x0D,0x00},	 // 81	Q	
{0x1E,0x11,0x11,0x1E,0x14,0x12,0x11,0x00},	 // 82	R	
{0x0F,0x10,0x10,0x0E,0x01,0x01,0x1E,0x00},	 // 83	S	
{0x1F,0x04,0x04,0x04,0x04,0x04,0x04,0x00},	 // 84	T	
{0x11,0x11,0x11,0x11,0x11,0x11,0x0E,0x00},	 // 85	U	
{0x11,0x11,0x11,0x11,0x11,0x0A,0x04,0x00},	 // 86	V	
{0x11,0x11,0x11,0x11,0x15,0x15,0x0E,0x00},	 // 87	W	
{0x11,0x11,0x0A,0x04,0x0A,0x11,0x11,0x00},	 // 88	X	
{0x11,0x11,0x11,0x0A,0x04,0x04,0x04,0x00},	 // 89	Y	
{0x1F,0x01,0x02,0x04,0x08,0x10,0x1F,0x00},	 // 90	Z	


{0x0E,0x08,0x08,0x08,0x08,0x08,0x0E,0x00},	 // 91	[	
{0x11,0x0A,0x1F,0x04,0x1F,0x04,0x04,0x00},	 /* 92	\	*/
{0x0E,0x02,0x02,0x02,0x02,0x02,0x0E,0x00},	 // 93	]	
{0x04,0x0A,0x11,0x00,0x00,0x00,0x00,0x00},	 // 94	^	
{0x00,0x00,0x00,0x00,0x00,0x00,0x1F,0x00},	 // 95	_	
{0x08,0x04,0x00,0x00,0x00,0x00,0x00,0x00},	 // 96	`	


{0x00,0x00,0x0E,0x01,0x0F,0x11,0x0F,0x00},	 // 97	a	
{0x10,0x10,0x1E,0x11,0x11,0x11,0x1E,0x00},	 // 98	b	
{0x00,0x00,0x0E,0x10,0x10,0x11,0x0E,0x00},	 // 99	c	
{0x01,0x01,0x0D,0x13,0x11,0x11,0x0F,0x00},	 //100	d	
{0x00,0x00,0x0E,0x11,0x1F,0x10,0x0E,0x00},	 //101	e	
{0x06,0x09,0x08,0x1C,0x08,0x08,0x08,0x00},	 //102	f	
{0x00,0x0F,0x11,0x11,0x0F,0x01,0x0E,0x00},	 //103	g	
{0x10,0x10,0x16,0x19,0x11,0x11,0x11,0x00},	 //104	h	
{0x04,0x00,0x0C,0x04,0x04,0x04,0x0E,0x00},	 //105	i	
{0x02,0x00,0x06,0x02,0x02,0x12,0x0C,0x00},	 //106	j	
{0x10,0x10,0x12,0x14,0x18,0x14,0x12,0x00},	 //107	k	
{0x18,0x08,0x08,0x08,0x08,0x08,0x1C,0x00},	 //108	l	
{0x00,0x00,0x1A,0x15,0x15,0x11,0x11,0x00},	 //109	m	
{0x00,0x00,0x16,0x19,0x11,0x11,0x11,0x00},	 //110	n	
{0x00,0x00,0x0E,0x11,0x11,0x11,0x0E,0x00},	 //111	o	
{0x00,0x00,0x1E,0x11,0x1E,0x10,0x10,0x00},	 //112	p	
{0x00,0x00,0x0F,0x11,0x0F,0x01,0x01,0x00},	 //113	q	
{0x00,0x00,0x16,0x19,0x10,0x10,0x10,0x00},	 //114	r	
{0x00,0x00,0x0E,0x10,0x0E,0x01,0x1E,0x00},	 //115	s	
{0x08,0x08,0x1C,0x08,0x08,0x09,0x06,0x00},	 //116	t	
{0x00,0x00,0x11,0x11,0x11,0x13,0x0D,0x00},	 //117	u	
{0x00,0x00,0x11,0x11,0x11,0x0A,0x04,0x00},	 //118	v	
{0x00,0x00,0x11,0x11,0x11,0x15,0x0A,0x00},	 //119	w	
{0x00,0x00,0x11,0x0A,0x04,0x0A,0x11,0x00},	 //120	x	
{0x00,0x00,0x11,0x11,0x0F,0x01,0x0E,0x00},	 //121	y	
{0x00,0x00,0x1F,0x02,0x04,0x08,0x1F,0x00},	 //122	z	


{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //123	{	
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //124	|	
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //125	}	
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00},	 //126	~	
{0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00}	 //127	DEL	
};
//********************************************************************************End of ASCII Table//

